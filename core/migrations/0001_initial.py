# Generated by Django 5.2.7 on 2025-10-26 09:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="GoogleMapsConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "api_key",
                    models.CharField(help_text="Google Maps API Key", max_length=500),
                ),
                (
                    "avg_speed_kph",
                    models.IntegerField(default=40, help_text="Average speed in km/h"),
                ),
                (
                    "late_penalty_per_min",
                    models.IntegerField(
                        default=500, help_text="Penalty per minute of lateness"
                    ),
                ),
                (
                    "drop_penalty_per_job",
                    models.IntegerField(
                        default=100000, help_text="Penalty per dropped job"
                    ),
                ),
                (
                    "return_to_depot",
                    models.BooleanField(
                        default=True, help_text="Return to depot at end of day"
                    ),
                ),
                (
                    "time_limit_seconds",
                    models.IntegerField(
                        default=30, help_text="OR-Tools solver time limit"
                    ),
                ),
            ],
            options={
                "verbose_name": "Google Maps Configuration",
                "verbose_name_plural": "Google Maps Configuration",
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ServiceRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("address", models.CharField(max_length=500)),
                ("lat", models.FloatField(blank=True, null=True)),
                ("lon", models.FloatField(blank=True, null=True)),
                (
                    "service_minutes",
                    models.IntegerField(help_text="Service duration in minutes"),
                ),
                (
                    "window_start",
                    models.DateTimeField(help_text="Earliest acceptable arrival time"),
                ),
                (
                    "window_end",
                    models.DateTimeField(help_text="Latest acceptable arrival time"),
                ),
                (
                    "priority",
                    models.IntegerField(
                        choices=[(1, "High"), (2, "Medium"), (3, "Low")], default=2
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("assigned", "Assigned"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="service_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "required_skills",
                    models.ManyToManyField(
                        related_name="service_requests", to="core.skill"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Technician",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "depot_address",
                    models.CharField(help_text="Depot address", max_length=500),
                ),
                (
                    "depot_lat",
                    models.FloatField(
                        blank=True, help_text="Depot latitude", null=True
                    ),
                ),
                (
                    "depot_lon",
                    models.FloatField(
                        blank=True, help_text="Depot longitude", null=True
                    ),
                ),
                (
                    "capacity_minutes",
                    models.IntegerField(
                        default=480, help_text="Daily capacity in minutes"
                    ),
                ),
                ("shift_start", models.TimeField(help_text="Shift start time")),
                ("shift_end", models.TimeField(help_text="Shift end time")),
                (
                    "color_hex",
                    models.CharField(
                        default="#4285F4", help_text="Route color (hex)", max_length=7
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "skills",
                    models.ManyToManyField(related_name="technicians", to="core.skill"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="technician_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["user__username"],
            },
        ),
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_date", models.DateField()),
                (
                    "sequence_order",
                    models.IntegerField(help_text="Order in technician's route"),
                ),
                (
                    "planned_start",
                    models.DateTimeField(help_text="Planned arrival time"),
                ),
                (
                    "planned_finish",
                    models.DateTimeField(help_text="Planned completion time"),
                ),
                ("actual_start", models.DateTimeField(blank=True, null=True)),
                ("actual_finish", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("assigned", "Assigned"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="assigned",
                        max_length=20,
                    ),
                ),
                (
                    "travel_time_minutes",
                    models.FloatField(
                        default=0, help_text="Travel time from previous location"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "service_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="core.servicerequest",
                    ),
                ),
                (
                    "technician",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="core.technician",
                    ),
                ),
            ],
            options={
                "ordering": ["assigned_date", "technician", "sequence_order"],
                "unique_together": {("service_request", "assigned_date")},
            },
        ),
    ]
